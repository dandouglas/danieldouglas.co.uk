# # This config uses the `.circleci/extended/orb-test.yml` as its base, and then publishes the app to S3.
# # The workflow contained here demonstrates a practical application of `post-steps`
# # and using workspace persistence
# version: 2.1

# orbs:
#   node: circleci/node@4.1
#   # The S3 orb will setup the aws-cli and quickly copy or sync anything to s3.
#   # Orbs reduce the amount of configuration required for common tasks.
#   # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/aws-s3
#   # NOTE: Environment variables containing the necessary secrets can be setup in the CircleCI UI
#   # See here https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
#   aws-s3: circleci/aws-s3@2.0

# workflows:
#   sample:
#     jobs:
#       - node/test:
#           version: '15.1'
#           # after the node/test job completes, build the dist packages and save them to a workspace
#           post-steps:
#             - run: npm run jam-prod:build
#             - aws-s3/copy:
#                 from: dist/static/
#                 to: s3://danieldouglas.co.uk
#                 arguments: --recursive

jobs:
  build_deploy:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt install python3-pip
            sudo pip3 install awscli --upgrade
      - run:
          name: Install node packages
          command: |
            npm install
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Install puppeteer with chronium
          command: |
            npm i puppeteer
      - run:
          name: Build
          command: |
            npm run jam-prod:build
      - run:
          name: Deploy
          command: |
            aws s3 sync ./dist/static s3://danieldouglas.co.uk
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_deploy




